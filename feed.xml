<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Public Samples</title>
    <link href="https://publicsamples.github.io/Public-Samples/feed.xml" rel="self" />
    <link href="https://publicsamples.github.io/Public-Samples" />
    <updated>2019-10-22T16:18:26+01:00</updated>
    <author>
        <name>Rick</name>
    </author>
    <id>https://publicsamples.github.io/Public-Samples</id>

    <entry>
        <title>All In</title>
        <author>
            <name>Rick</name>
        </author>
        <link href="https://publicsamples.github.io/Public-Samples/all-in.html"/>
        <id>https://publicsamples.github.io/Public-Samples/all-in.html</id>

        <updated>2019-09-24T02:10:04+01:00</updated>
            <summary>
                <![CDATA[
                     // { setTimeout(() => { document.querySelector("#seq1").setAttribute("highlight", "-1"); document.querySelector("#seq2").setAttribute("highlight", "-1"); document.querySelector("#seq3").setAttribute("highlight", "-1"); }, 100); });
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <div> </div>
<script type="text/javascript">// <![CDATA[
var eq = new Tone.EQ3().toMaster({
					})
				
					
				
					var verb = new Tone.Freeverb({
										"frequency" : "8n",
										"feedback" : 0.6,
										"wet" : 0.0
									}).connect(eq);	
									
									//the feedback delay
									var feedbackDelay = new Tone.PingPongDelay({
										"frequency" : "8n",
										"feedback" : 0.6,
										"wet" : 0.0
									}).connect(verb);		
				
					var filter = new Tone.AutoFilter({
								"frequency" : 100,
								"wet" : 0.0,
						"frequency" : "8n"
							}).connect(feedbackDelay).start();
				

				
	
	

		
			var keys = new Tone.Players({
"1" : "https://raw.githubusercontent.com/publicsamples/Roland-SH-2/master/MP3/AllIn/FILE25.mp3",
"2" : "https://raw.githubusercontent.com/publicsamples/Roland-SH-2/master/MP3/AllIn/FILE24.mp3",
"3" : "https://raw.githubusercontent.com/publicsamples/Roland-SH-2/master/MP3/AllIn/FILE23.mp3",
"4" : "https://raw.githubusercontent.com/publicsamples/Roland-SH-2/master/MP3/AllIn/FILE22.mp3",
"5" : "https://raw.githubusercontent.com/publicsamples/Roland-SH-2/master/MP3/AllIn/FILE21.mp3",
"6" : "https://raw.githubusercontent.com/publicsamples/Roland-SH-2/master/MP3/AllIn/FILE20.mp3",
"7" : "https://raw.githubusercontent.com/publicsamples/Roland-SH-2/master/MP3/AllIn/FILE19.mp3",
"8" : "https://raw.githubusercontent.com/publicsamples/Roland-SH-2/master/MP3/AllIn/FILE18.mp3",
"9" : "https://raw.githubusercontent.com/publicsamples/Roland-SH-2/master/MP3/AllIn/FILE17.mp3",
"10" : "https://raw.githubusercontent.com/publicsamples/Roland-SH-2/master/MP3/AllIn/FILE16.mp3",
"11" : "https://raw.githubusercontent.com/publicsamples/Roland-SH-2/master/MP3/AllIn/FILE15.mp3",
"12" : "https://raw.githubusercontent.com/publicsamples/Roland-SH-2/master/MP3/AllIn/FILE14.mp3"
	}, {
				"volume" : 00,
				"fadeOut" : "8512n",
				}).connect(filter);
				
			
				//the notes
				var noteNames = ["1", "2", "3", "4"];
				var noteNames2 = ["5", "6", "7", "8"];	
				var noteNames3 = ["9", "10", "11", "12"];		
				
		
				var loop = new Tone.Sequence(function(time, col){
					var column = document.querySelector("#seq1").currentColumn;
					column.forEach(function(val, i){
						if (val){
							//slightly randomized velocities
							var vel = Math.random() * 0.5 + 0.5;
							keys.get(noteNames[i]).start(time, 0, "16n", 560, vel);
						}
					});
					//set the columne on the correct draw frame
					Tone.Draw.schedule(function(){
						document.querySelector("#seq1").setAttribute("highlight", col);
					}, time);
				}, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "16n").start(0);
		
			

				var loop2 = new Tone.Sequence(function(time, col){
					var column2 = document.querySelector("#seq2").currentColumn;
					column2.forEach(function(val, i){
						if (val){
							//slightly randomized velocities
							var vel2 = Math.random() * 0.5 + 0.5;
							keys.get(noteNames2[i]).start(time, 0, "16n", 560, vel2);
						}
					});
					//set the columne on the correct draw frame
					Tone.Draw.schedule(function(){
						document.querySelector("#seq2").setAttribute("highlight", col);
					}, time);
				}, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "16n").start(0);
		
		
		
					var loop3 = new Tone.Sequence(function(time, col){
						var column3 = document.querySelector("#seq3").currentColumn;
						column3.forEach(function(val, i){
							if (val){
								//slightly randomized velocities
								var vel3 = Math.random() * 0.5 + 0.5;
								keys.get(noteNames3[i]).start(time, 0, "16n", 560, vel3);
							}
						});
						//set the columne on the correct draw frame
						Tone.Draw.schedule(function(){
							document.querySelector("#seq3").setAttribute("highlight", col);
						}, time);
					}, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "16n").start(0);
			
		
		
			
				//bind the interface
				document.querySelector("tone-auto-filter").bind(filter);
				document.querySelector("tone-transport").bind(Tone.Transport);
				document.querySelector("tone-freeverb").bind(verb);
		document.querySelector("tone-ping-pong-delay").bind(feedbackDelay);

				Tone.Transport.on("stop", () => {
					setTimeout(() => {
						document.querySelector("#seq1").setAttribute("highlight", "-1");
						document.querySelector("#seq2").setAttribute("highlight", "-1");
						document.querySelector("#seq3").setAttribute("highlight", "-1");
					}, 100);
				
				});
// ]]></script>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Roland SH2</title>
        <author>
            <name>Rick</name>
        </author>
        <link href="https://publicsamples.github.io/Public-Samples/roland-sh2.html"/>
        <id>https://publicsamples.github.io/Public-Samples/roland-sh2.html</id>

        <updated>2019-10-22T16:04:30+01:00</updated>
            <summary>
                <![CDATA[
                     PatchAll InFeel itfunkyGhostBassLFOPercopenenvpwmPlasticsRezzySqrShortPWMSimpleToneTheBigRTwoFingerBassWowBasswowie
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p class="text-align-center"> </p>
<label>Patch</label><select id="location" onchange="setIframeSource()">
<option value="https://publicsamples.github.io/Public-Samples/SH2/AllIn.html">All In</option>
<option value="https://publicsamples.github.io/Public-Samples/SH2/Feelit.html">Feel it</option>
<option value="https://publicsamples.github.io/Public-Samples/SH2/funky.html">funky</option>
<option value="https://publicsamples.github.io/Public-Samples/SH2/GhostBass.html">GhostBass</option>
<option value="https://publicsamples.github.io/Public-Samples/SH2/LFOPerc.html">LFOPerc</option>
<option value="https://publicsamples.github.io/Public-Samples/SH2/openenvpwm.html">openenvpwm</option>
<option value="https://publicsamples.github.io/Public-Samples/SH2/Plastics.html">Plastics</option>
<option value="https://publicsamples.github.io/Public-Samples/SH2/RezzySqr.html">RezzySqr</option>
<option value="https://publicsamples.github.io/Public-Samples/SH2/ShortPWM.html">ShortPWM</option>
<option value="https://publicsamples.github.io/Public-Samples/SH2/SimpleTone.html">SimpleTone</option>
<option value="https://publicsamples.github.io/Public-Samples/SH2/TheBigR.html">TheBigR</option>
<option value="https://publicsamples.github.io/Public-Samples/SH2/TwoFingerBass.html">TwoFingerBass</option>
<option value="https://publicsamples.github.io/Public-Samples/SH2/WowBass.html">WowBass</option>
<option value="https://publicsamples.github.io/Public-Samples/SH2/wowie.html">wowie</option>
</select>
<div class="two-thirds column"><iframe width="600" height="1000" id="myIframe" src="https://publicsamples.github.io/Public-Samples/SH2/AllIn.html" frameborder="0" marginwidth="0" marginheight="0" scrolling="yes"></iframe></div>
            ]]>
        </content>
    </entry>
</feed>
